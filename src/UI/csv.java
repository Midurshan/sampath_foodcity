/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package UI;

import db.database;
import java.awt.HeadlessException;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.util.Arrays;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import java.text.SimpleDateFormat;

/**
 *
 * @author DELL
 */
public class csv extends javax.swing.JFrame {

    /**
     * Creates new form csv
     */
    public csv() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButton1.setText("Add Data");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(152, 152, 152)
                .addComponent(jButton1)
                .addContainerGap(167, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(121, 121, 121)
                .addComponent(jButton1)
                .addContainerGap(156, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
    try {
        JFileChooser jfilech = new JFileChooser();
        jfilech.setDialogTitle("Select a CSV file");
        int userSelected = jfilech.showOpenDialog(null);

        if (userSelected == JFileChooser.APPROVE_OPTION) {
            File filepath = jfilech.getSelectedFile();
            String file = filepath.getAbsolutePath();

            try (BufferedReader br = new BufferedReader(new FileReader(file))) {
                String line;
                boolean firstLine = true;

                while ((line = br.readLine()) != null) {
                    if (firstLine) {
                        firstLine = false; // Skip the header line
                        continue;
                    }

                    // Print the line read from the CSV file for debugging
                    System.out.println("Line read: " + line);

                    String[] val = line.split(",");
                    if (val.length == 9) { // Ensure the row has exactly 9 values
                        // Process and insert into the database
                        insertIntoDatabase(val);
                    } else {
                        System.err.println("Invalid row format: " + Arrays.toString(val));
                    }
                }

                JOptionPane.showMessageDialog(null, "CSV file processed successfully!");
            } catch (IOException e) {
                e.printStackTrace();
                JOptionPane.showMessageDialog(null, "Error reading the file: " + e.getMessage());
            }
        } else {
            JOptionPane.showMessageDialog(null, "No file selected");
        }
    } catch (Exception e) {
        e.printStackTrace();
        JOptionPane.showMessageDialog(null, e.getMessage());
    }
}

private void insertIntoDatabase(String[] val) {
    Connection con = null;
    PreparedStatement pst = null;

    try {
        con = database.getConnection();
        if (con == null) {
            throw new SQLException("Unable to establish a database connection");
        }

        String query = "INSERT INTO product(customer_id, product_id, product_name, quantity, price_per_unit, date, total_price, region) VALUES (?, ?, ?, ?, ?, ?, ?, ?)";
        pst = con.prepareStatement(query);

        // Set the parameters from the CSV row
        pst.setString(1, val[1].trim()); // CustomerID
        pst.setString(2, val[2].trim()); // ProductID
        pst.setString(3, val[3].trim()); // ProductName
        pst.setInt(4, Integer.parseInt(val[4].trim())); // Quantity
        pst.setFloat(5, Float.parseFloat(val[5].trim())); // PriceperUnit

        // Parse the date
        String dateString = val[6].trim();
        SimpleDateFormat sdf = new SimpleDateFormat("M/d/yyyy");
        java.util.Date parsedDate = sdf.parse(dateString);
        pst.setDate(6, new java.sql.Date(parsedDate.getTime()));

        pst.setFloat(7, Float.parseFloat(val[7].trim())); // TotalPrice
        pst.setString(8, val[8].trim()); // Region

        // Execute the query
        pst.executeUpdate();
        System.out.println("Data inserted successfully: " + Arrays.toString(val));
    } catch (Exception e) {
        System.err.println("Failed to insert row: " + Arrays.toString(val));
        e.printStackTrace();
    } finally {
        // Ensure the resources are closed
        try {
            if (pst != null) pst.close();
            if (con != null) con.close();
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }    
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(csv.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(csv.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(csv.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(csv.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new csv().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    // End of variables declaration//GEN-END:variables
}
